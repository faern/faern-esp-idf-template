[build]
# Uncomment the relevant target for your chip here (ESP32, ESP32-S2, ESP32-S3 or ESP32-C3)
#target = "xtensa-esp32-espidf"
#target = "xtensa-esp32s2-espidf"
#target = "xtensa-esp32s3-espidf"
target = "riscv32imc-esp-espidf"

[target.xtensa-esp32-espidf]
linker = "ldproxy"
runner = "espflash --monitor"
#rustflags = ["--cfg", "espidf_time64"] # Extending time_t for ESP IDF 5: https://github.com/esp-rs/rust/issues/110

[target.xtensa-esp32s2-espidf]
linker = "ldproxy"
runner = "espflash --monitor"
#rustflags = ["--cfg", "espidf_time64"] # Extending time_t for ESP IDF 5: https://github.com/esp-rs/rust/issues/110

[target.xtensa-esp32s3-espidf]
linker = "ldproxy"
runner = "espflash --monitor"
#rustflags = ["--cfg", "espidf_time64"] # Extending time_t for ESP IDF 5: https://github.com/esp-rs/rust/issues/110

[target.riscv32imc-esp-espidf]
linker = "ldproxy"
runner = "espflash --monitor"
# Future - necessary for the experimental "native build" of esp-idf-sys with ESP32C3. See also https://github.com/ivmarkov/embuild/issues/16
# For ESP-IDF 5 add `espidf_time64` and for earlier versions - remove this flag: https://github.com/esp-rs/rust/issues/110
rustflags = ["-C", "default-linker-libraries"]

[unstable]

build-std = ["std", "panic_abort"]
#build-std-features = ["panic_immediate_abort"] # Required for older ESP-IDF versions without a realpath implementation

[env]
# Builds against ESP-IDF stable (v4.4)
ESP_IDF_VERSION = "release/v4.4"

# makes `esp-idf-sys` compile ESP-IDF into a global `~/.espressif` instead of this project dir
ESP_IDF_TOOLS_INSTALL_DIR = { value = "global" }
# A fix for how messily `embuild` handles workspaces. Required for some project setups.
CARGO_WORKSPACE_DIR = { value = "", relative = true }